version: 2.1

commands:
  setup:
    steps:
      - checkout
      - run:
          name: 'Login to npm'
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: yarn install --frozen-lockfile

executors:
  node:
    docker:
      - image: circleci/node:14.16.0

jobs:
  build:
    executor: node
    steps:
      - setup
      - run:
          name: Build distribution files
          command: yarn build
      - persist_to_workspace:
          root: .
          paths: .

  test:
    executor: node
    steps:
      - setup
      - attach_workspace:
          at: .
      - run:
          name: Run Tests
          command: yarn test:ci

  lint:
    executor: node
    steps:
      - setup
      - attach_workspace:
          at: .
      - run:
          name: Lint source code
          command: yarn lint

  publish-release:
    executor: node
    steps:
      - setup
      - attach_workspace:
          at: .
      - run:
          name: Publish npm Package
          # Check for the current version in the registry, and if it's not
          # found, publish it. We know the version is not yet in the registry if
          # `yarn info` returns no `dist` field. (Also, if `yarn info` returns
          # an error, it may be because the package has never been published.)
          command: |
            name="$(jq --raw-output .name package.json)"
            version="$(jq --raw-output .version package.json)"
            full_identifier="$name@$version"
            echo "Checking for published version..."
            if [ $(yarn -s info $full_identifier --json 2>&1 | jq -s '.[0].type == "error" or .[0].data.dist == null') == "true" ]
            then
              echo "Publishing $full_identifierâ€¦"
              yarn publish
            else
              echo "$full_identifier already published. Doing nothing."
            fi

workflows:
  test-and-publish:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
      - publish-release:
          filters:
            branches:
              only: master
          requires:
            - lint
            - build
